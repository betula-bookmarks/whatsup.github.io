{"version":3,"sources":["webpack:///./src/todos/filtered.ts"],"names":["newFiltered","Todos","fractal","MODE","Mode","Service","FILTER","filter","acc","Todo","Done","done","FilterMode","All","Active","Completed","push"],"mappings":"umFAKO,SAASA,EAAYC,GACxB,OAAOC,YAAO,e,EAAA,G,EAAA,yBAAS,iHACnB,2BAAOC,YAAKC,IAAKC,UAAjB,WADmB,OAIO,OAJP,cAIO,oBAAOC,KAAP,WAJP,OAIA,OAJA,qCAIA,4CAJA,OAOI,OAHbC,EAJS,KAKTC,EAAM,GALG,OAOI,oBAAOP,GAAP,YAPJ,gGAQO,OADXQ,EAPI,QAQO,oBAAOA,GAAP,aARP,QASE,OATF,QAQHC,EARG,EAQHA,KACK,oBAAOA,GAAP,aATF,QASLC,EATK,OAYPJ,IAAWK,IAAWC,KACrBN,IAAWK,IAAWE,SAAWH,GACjCJ,IAAWK,IAAWG,WAAaJ,IAEpCH,EAAIQ,KAAKP,GAhBF,mJAoBf,OApBe,UAoBTD,EApBS,uF,mDAAT,sD","file":"15.bundle.js","sourcesContent":["import { fractal, Fractal } from '@fract/core'\nimport { Todo, TodoService } from './todo'\nimport { MODE, Mode, FILTER } from './factors'\nimport { FilterMode } from './const'\n\nexport function newFiltered(Todos: Fractal<Todo[]>) {\n    return fractal<Todo[]>(async function* _Filtered() {\n        yield* MODE(Mode.Service)\n\n        while (true) {\n            const filter = yield* yield* FILTER\n            const acc = [] as Todo[]\n\n            for (const Todo of yield* Todos) {\n                const { Done } = (yield* Todo) as TodoService\n                const done = yield* Done\n\n                if (\n                    filter === FilterMode.All ||\n                    (filter === FilterMode.Active && !done) ||\n                    (filter === FilterMode.Completed && done)\n                ) {\n                    acc.push(Todo)\n                }\n            }\n\n            yield acc\n        }\n    })\n}\n"],"sourceRoot":""}