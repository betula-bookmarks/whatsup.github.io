{"version":3,"sources":["webpack:///./src/factors/user.tsx"],"names":["newUser","guts","Name","fraction","Age","fractal","MODE","Mode","Json","View","Edit","userAsJson","userAsView","userAsEdit","data","name","age","UserJson","JSON","stringify","a","UserView","Property","PropertyName","PropertyValue","handleNameChange","e","use","target","value","handleAgeChange","parseInt","UserEdit","NameInput","onChange","defaultValue","AgeInput","styled","code","div","input","attrs","type"],"mappings":"8mFAUO,SAASA,IACZ,IAGMC,EAAiB,CAAEC,KAHZC,YAAS,QAGSC,IAFnBD,YAAS,KAIrB,OAAOE,YAAO,4CAAc,6FAChB,2BAAOC,KAAP,WADgB,+BAEfC,IAAKC,KAFU,SAKfD,IAAKE,KALU,SAQfF,IAAKG,KARU,kBAGhB,2BAAOC,EAAWV,IAAlB,WAHgB,0CAMhB,2BAAOW,EAAWX,IAAlB,WANgB,0CAShB,2BAAOY,EAAWZ,IAAlB,WATgB,+EAAd,sD,SAeFU,E,mFAAhB,wGAA6BT,EAA7B,EAA6BA,KAAME,EAAnC,EAAmCA,IAAnC,OAGkB,2BAAOF,GAAP,WAHlB,OAIiB,OAJjB,UAIiB,oBAAOE,GAAP,WAJjB,OAOQ,OAPR,UAEcU,EAFd,CAGYC,KAHZ,KAIYC,IAJZ,eAOc,kBAACC,EAAD,KAAWC,KAAKC,UAAUL,EAAM,KAAM,IAPpD,mE,+BAWgBF,E,mFAAhB,sGAA6BV,EAA7B,EAA6BA,KAAME,EAAnC,EAAmCA,IAAnC,OAMoC,OANpC,OAAAgB,EAAA,KAGaC,EAHb,OAAAD,EAAA,KAIiBE,EAJjB,KAKoB,kBAACC,EAAD,aALpB,OAAAH,EAAA,KAMqBI,EAAe,oBAAOtB,GAAP,YANpC,QAUoC,OAVpC,4HAAAkB,EAAA,MAQiBE,EARjB,MASoB,kBAACC,EAAD,YATpB,QAAAH,EAAA,MAUqBI,EAAe,oBAAOpB,GAAP,aAVpC,QAEQ,OAFR,0IAEQ,oDAFR,oE,+BAiBgBS,E,mFAAhB,0GAA6BX,EAA7B,EAA6BA,KAAME,EAAnC,EAAmCA,IACzBqB,EAAmB,SAACC,GAAD,OAA4CxB,EAAKyB,IAAID,EAAEE,OAAOC,QACjFC,EAAkB,SAACJ,GAAD,OAA4CtB,EAAIuB,IAAII,SAASL,EAAEE,OAAOC,QAAU,IAF5G,OAU6E,OAV7E,OAAAT,EAAA,KAMaY,EANb,OAAAZ,EAAA,KAOiBE,EAPjB,KAQoB,kBAACC,EAAD,aARpB,OAAAH,EAAA,KASqBI,EATrB,OAAAJ,EAAA,KAUyBa,EAVzB,KAU6CR,EAAgC,oBAAOvB,GAAP,aAV7E,QAgB2E,OAhB3E,mBAUmCgC,SAVnC,KAU+DC,aAV/D,2KAAAf,EAAA,MAaiBE,EAbjB,MAcoB,kBAACC,EAAD,YAdpB,QAAAH,EAAA,MAeqBI,EAfrB,QAAAJ,EAAA,MAgByBgB,EAhBzB,MAgB4CN,EAA+B,oBAAO1B,GAAP,aAhB3E,QAKQ,OALR,mBAgBkC8B,SAhBlC,MAgB6DC,aAhB7D,uLAKQ,oDALR,oE,6TAwBA,IAAMlB,EAAWoB,IAAOC,KAAV,KAMRjB,EAAWgB,IAAOE,IAAV,KAIRjB,EAAWe,IAAOE,IAAV,KAORhB,EAAec,IAAOE,IAAV,KAKZf,EAAgBa,IAAOE,IAAV,KAKbP,EAAWK,IAAOE,IAAV,KAIRN,EAAYI,IAAOG,MAAMC,MAAM,CAAEC,KAAM,QAA3BL,CAAH,KAITD,EAAWC,IAAOG,MAAMC,MAAM,CAAEC,KAAM,QAA3BL,CAAH","file":"13.bundle.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { fraction, Fraction, fractal } from '@fract/core'\nimport { MODE, Mode } from './factors'\n\ninterface UserGuts {\n    Name: Fraction<string>\n    Age: Fraction<number>\n}\n\nexport function newUser() {\n    const Name = fraction('John')\n    const Age = fraction(33)\n\n    const guts: UserGuts = { Name, Age }\n\n    return fractal<JSX.Element>(async function* _User(): AsyncGenerator<JSX.Element> {\n        switch (yield* MODE) {\n            case Mode.Json:\n                yield* userAsJson(guts)\n                break\n            case Mode.View:\n                yield* userAsView(guts)\n                break\n            case Mode.Edit:\n                yield* userAsEdit(guts)\n                break\n        }\n    })\n}\n\nasync function* userAsJson({ Name, Age }: UserGuts): AsyncGenerator<JSX.Element> {\n    while (true) {\n        const data = {\n            name: yield* Name,\n            age: yield* Age,\n        }\n\n        yield <UserJson>{JSON.stringify(data, null, 4)}</UserJson>\n    }\n}\n\nasync function* userAsView({ Name, Age }: UserGuts): AsyncGenerator<JSX.Element> {\n    while (true) {\n        yield (\n            <UserView>\n                <Property>\n                    <PropertyName>Name</PropertyName>\n                    <PropertyValue>{yield* Name}</PropertyValue>\n                </Property>\n                <Property>\n                    <PropertyName>Age</PropertyName>\n                    <PropertyValue>{yield* Age}</PropertyValue>\n                </Property>\n            </UserView>\n        )\n    }\n}\n\nasync function* userAsEdit({ Name, Age }: UserGuts): AsyncGenerator<JSX.Element> {\n    const handleNameChange = (e: React.ChangeEvent<HTMLInputElement>) => Name.use(e.target.value)\n    const handleAgeChange = (e: React.ChangeEvent<HTMLInputElement>) => Age.use(parseInt(e.target.value) || 0)\n\n    while (true) {\n        yield (\n            <UserEdit>\n                <Property>\n                    <PropertyName>Name</PropertyName>\n                    <PropertyValue>\n                        <NameInput onChange={handleNameChange} defaultValue={yield* Name} />\n                    </PropertyValue>\n                </Property>\n                <Property>\n                    <PropertyName>Age</PropertyName>\n                    <PropertyValue>\n                        <AgeInput onChange={handleAgeChange} defaultValue={yield* Age} />\n                    </PropertyValue>\n                </Property>\n            </UserEdit>\n        )\n    }\n}\n\nconst UserJson = styled.code`\n    white-space: pre;\n    font-weight: 400;\n    font-family: monospace;\n`\n\nconst UserView = styled.div`\n    padding-top: 18px;\n`\n\nconst Property = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 1px;\n    min-height: 20px;\n`\n\nconst PropertyName = styled.div`\n    font-weight: 400;\n    flex: 0 0 80px;\n`\n\nconst PropertyValue = styled.div`\n    flex: 0 0 80px;\n    min-width: 80px;\n`\n\nconst UserEdit = styled.div`\n    padding-top: 18px;\n`\n\nconst NameInput = styled.input.attrs({ type: 'text' })`\n    font: inherit;\n    width: 100%;\n`\nconst AgeInput = styled.input.attrs({ type: 'text' })`\n    font: inherit;\n    width: 100%;\n`\n"],"sourceRoot":""}