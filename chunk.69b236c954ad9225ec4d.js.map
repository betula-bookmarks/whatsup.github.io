{"version":3,"sources":["webpack:///./src/editor/factors.tsx","webpack:///./src/editor/editor.tsx","webpack:///./src/editor/const.tsx"],"names":["Branch","BRANCH","factor","View","EDITABLE","CHANGE_EDITABLE","Editor","fractal","newBlock","data","JSON","parse","localStorage","getItem","Root","Editable","fraction","Target","use","Style","Tree","Data","stringify","setItem","a","_Container","_ViewContent","_Style","_Tree","styled","div","_View"],"mappings":"2FAAA,4IAGYA,EAHZ,S,SAGYA,O,eAAAA,I,iBAAAA,I,eAAAA,I,gBAAAA,M,KAOL,IAAMC,EAASC,YAAOF,EAAOG,MACvBC,EAAWF,cACXG,EAAkBH,e,k6GCL/B,IAGaI,EAASC,YAAO,4CAAC,mIACC,+BADD,OAQ1B,OAR0B,SAClBC,EADkB,EAClBA,SAEFC,EAAOC,KAAKC,MAAMC,aAAaC,QCbhB,iBDQrB,+mBAOMC,EAAON,EAASC,GAChBM,EAAWC,YAAS,CAAEC,OAAQH,IAEpC,oBAAOV,YAASW,IAAhB,WAR0B,OAS1B,2BAAOV,aAAgB,SAACY,GAAD,OAAmBF,EAASG,IAAI,CAAED,eAAzD,WAT0B,OA0B1B,OAfMd,EAAOI,YAAO,4CAAC,6FACjB,2BAAON,YAAOD,IAAOG,OAArB,WADiB,OAEJ,OAFI,SAEEW,EAFF,iEAAD,sDAKdK,EAAQZ,YAAO,4CAAC,6FAClB,2BAAON,YAAOD,IAAOmB,QAArB,WADkB,OAEE,2BAAOJ,GAAP,WAFF,OAEL,OAFK,SAEL,KAAwBE,OAFnB,iEAAD,sDAKfG,EAAOb,YAAO,4CAAC,6FACjB,2BAAON,YAAOD,IAAOoB,OAArB,WADiB,OAEJ,OAFI,SAEEN,EAFF,iEAAD,sDAKpB,oBAAOP,YAAO,4CAAC,6FACX,2BAAON,YAAOD,IAAOqB,OAArB,WADW,OAI8C,OAJ9C,KAIDT,aAJC,KCpCM,eDoCN,KAI+BF,KAAe,oBAAOI,GAAP,WAJ9C,OAIP,OAJO,oBAIoCQ,UAJpC,0BAIP,KAAmBC,QAAnB,qBAJO,mEAAD,uDAAd,YA1B0B,QAsCK,OAtCL,OAAAC,EAAA,KAoCjBC,EApCiB,OAAAD,EAAA,KAqCb,EArCa,OAAAA,EAAA,KAsCTE,EAAc,oBAAOvB,GAAP,YAtCL,QAwCL,OAxCK,kHAsCiC,KAtCjC,QAAAqB,EAAA,MAwCbG,EAAQ,oBAAOR,GAAP,aAxCK,QAyCN,OAzCM,2EAAAK,EAAA,MAyCbI,EAAO,oBAAOR,GAAP,aAzCM,QAmCtB,OAnCsB,6EAmCtB,0DAnCsB,oEAAD,sDA+CvBK,EAAaI,IAAOC,IAAV,KAaVC,EAAQF,IAAOC,IAAV,KAKLJ,EAAeG,IAAOC,IAAV,KAaZH,EAASE,IAAOC,IAAV,KAKNF,EAAQC,IAAOC,IAAV","file":"chunk.69b236c954ad9225ec4d.js","sourcesContent":["import { factor, Fraction } from '@fract/core'\nimport { Block } from './block'\n\nexport enum Branch {\n    View,\n    Style,\n    Tree,\n    Data,\n}\n\nexport const BRANCH = factor(Branch.View)\nexport const EDITABLE = factor<Fraction<{ Target: Block }>>()\nexport const CHANGE_EDITABLE = factor<(target: any) => void>()\n","import React from 'react'\nimport styled from 'styled-components'\nimport { fractal, fraction } from '@fract/core'\nimport { BRANCH, Branch, EDITABLE, CHANGE_EDITABLE } from './factors'\nimport { STORE_KEY } from './const'\nimport { BlockData, Block } from './block'\n\nconst DEFAULT =\n    '{\"tag\":\"div\",\"width\":\"auto\",\"height\":\"auto\",\"border\":\"none\",\"borderRadius\":\"none\",\"background\":\"unset\",\"children\":[{\"tag\":\"div\",\"width\":\"auto\",\"height\":\"100px\",\"border\":\"none\",\"borderRadius\":\"none\",\"background\":\"LightCyan\",\"children\":[]},{\"tag\":\"div\",\"width\":\"auto\",\"height\":\"50px\",\"border\":\"none\",\"borderRadius\":\"40px\",\"background\":\"LightGreen\",\"children\":[]},{\"tag\":\"div\",\"width\":\"auto\",\"height\":\"400px\",\"border\":\"none\",\"borderRadius\":\"none\",\"background\":\"Goldenrod\",\"children\":[{\"tag\":\"div\",\"width\":\"300px\",\"height\":\"300px\",\"border\":\"3px red solid\",\"borderRadius\":\"50%\",\"background\":\"MediumPurple\",\"children\":[]}]}]}'\n\nexport const Editor = fractal(async function* _HtmlEditor() {\n    const { newBlock } = await import('./block')\n\n    const data = JSON.parse(localStorage.getItem(STORE_KEY) || DEFAULT) as BlockData\n\n    const Root = newBlock(data)\n    const Editable = fraction({ Target: Root })\n\n    yield* EDITABLE(Editable)\n    yield* CHANGE_EDITABLE((Target: Block) => Editable.use({ Target }))\n\n    const View = fractal(async function* _View() {\n        yield* BRANCH(Branch.View)\n        while (true) yield Root\n    })\n\n    const Style = fractal(async function* _Edit() {\n        yield* BRANCH(Branch.Style)\n        while (true) yield (yield* Editable).Target\n    })\n\n    const Tree = fractal(async function* _Edit() {\n        yield* BRANCH(Branch.Tree)\n        while (true) yield Root\n    })\n\n    yield* fractal(async function* _AutoSyncWithLocalStore() {\n        yield* BRANCH(Branch.Data)\n\n        while (true) {\n            yield localStorage.setItem(STORE_KEY, JSON.stringify(yield* Root))\n        }\n    })\n\n    while (true) {\n        yield (\n            <_Container>\n                <_View>\n                    <_ViewContent>{yield* View}</_ViewContent>{' '}\n                </_View>\n                <_Style>{yield* Style}</_Style>\n                <_Tree>{yield* Tree}</_Tree>\n            </_Container>\n        )\n    }\n})\n\nconst _Container = styled.div`\n    font: 14px 'SF Mono', Monaco, Menlo, Courier, monospace;\n    display: grid;\n    height: 100vh;\n    background-color: #37474f;\n    column-gap: 1px;\n    row-gap: 1px;\n    grid-template-columns: minmax(400px, 1fr) minmax(250px, 350px);\n    grid-template-rows: 1fr 1fr;\n    grid-template-areas:\n        'view style'\n        'view tree';\n`\nconst _View = styled.div`\n    grid-area: view;\n    padding: 20px;\n    background-color: #263238;\n`\nconst _ViewContent = styled.div`\n    overflow: scroll;\n    width: 100%;\n    height: 100%;\n    --grad-color: #495962;\n    background-image: linear-gradient(45deg, var(--grad-color) 25%, transparent 25%),\n        linear-gradient(-45deg, var(--grad-color) 25%, transparent 25%),\n        linear-gradient(45deg, transparent 75%, var(--grad-color) 75%),\n        linear-gradient(-45deg, transparent 75%, var(--grad-color) 75%);\n    background-size: 20px 20px;\n    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n    background-color: #37474f;\n`\nconst _Style = styled.div`\n    grid-area: style;\n    background-color: #263238;\n    overflow: scroll;\n`\nconst _Tree = styled.div`\n    grid-area: tree;\n    padding-left: 3px;\n    padding-top: 2px;\n    background-color: #263238;\n    overflow: scroll;\n`\n","export const STORE_KEY = 'EDITOR_STORE'\n"],"sourceRoot":""}