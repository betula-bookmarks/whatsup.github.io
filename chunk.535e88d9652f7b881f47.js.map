{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./src/todos/todos.ts"],"names":["$","$map","map","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","target","proto","forced","callbackfn","this","arguments","length","undefined","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","arg","i","k","len","E","A","n","TypeError","TodosMode","TODOS_MODE","factor","newTodos","data","init","memo","newTodo","Items","fraction","fractal","guts","Actions","Counters","workInActionsMode","workInCountersMode","MODE","Mode","Data","Jsx","workInDataMode","workInJsxMode","connect","TODO_MODE","TodoMode","REMOVE_TODO","removeTodo","removeId","exec","Service","todos","Todo","id","push","use","Filtered","FILTER","filter","acc","Done","done","FilterMode","All","Active","Completed","create","name","Math","random","toString","removeCompleted","active","completed"],"mappings":"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","file":"chunk.535e88d9652f7b881f47.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","import { fractal, fraction, exec, Fraction, factor, Fractal } from '@fract/core'\nimport { MODE, Mode, FILTER } from './factors'\nimport { Todo, TodoData, TodoService } from './todo'\nimport { memo, connect } from './utils'\nimport { FilterMode } from './const'\n\ntype Guts = {\n    Items: Fraction<Todo[]>\n}\n\nexport type Todos = Fractal<TodosData | TodosJsx | TodosCounters>\nexport type TodosData = TodoData[]\nexport type TodosJsx = JSX.Element[]\nexport type TodosCounters = { active: number; completed: number }\n\nexport enum TodosMode {\n    Actions,\n    Counters,\n}\n\nexport const TODOS_MODE = factor<TodosMode>()\n\nexport function newTodos(data: TodoData[]): Todos {\n    const init = memo(async () => {\n        const { newTodo } = await import('./todo')\n        const Items = fraction(data.map((data) => newTodo(data)))\n\n        return { Items }\n    })\n\n    return fractal(async function* _Todos() {\n        const guts = await init()\n\n        switch (yield* TODOS_MODE) {\n            case TodosMode.Actions:\n                yield* workInActionsMode(guts)\n                break\n            case TodosMode.Counters:\n                yield* workInCountersMode(guts)\n                break\n            default:\n                switch (yield* MODE) {\n                    case Mode.Data:\n                        yield* workInDataMode(guts)\n                        break\n                    case Mode.Jsx:\n                        yield* workInJsxMode(guts)\n                        break\n                }\n        }\n    })\n}\n\nasync function* workInDataMode({ Items }: Guts) {\n    while (true) {\n        yield yield* connect(Items)\n    }\n}\n\nasync function* workInJsxMode({ Items }: Guts) {\n    const { TODO_MODE, TodoMode, REMOVE_TODO } = await import('./todo')\n\n    const removeTodo = (removeId: string) => {\n        exec(async function* () {\n            yield* TODO_MODE(TodoMode.Service)\n\n            const todos = [] as Todo[]\n\n            for (const Todo of yield* Items) {\n                const { id } = (yield* Todo) as TodoService\n\n                if (id !== removeId) {\n                    todos.push(Todo)\n                }\n            }\n\n            Items.use(todos)\n        })\n    }\n\n    yield* REMOVE_TODO(removeTodo)\n\n    const Filtered = fractal<Todo[]>(async function* _Filtered() {\n        yield* TODO_MODE(TodoMode.Service)\n\n        while (true) {\n            const filter = yield* yield* FILTER\n            const acc = [] as Todo[]\n\n            for (const Todo of yield* Items) {\n                const { Done } = (yield* Todo) as TodoService\n                const done = yield* Done\n\n                if (\n                    filter === FilterMode.All ||\n                    (filter === FilterMode.Active && !done) ||\n                    (filter === FilterMode.Completed && done)\n                ) {\n                    acc.push(Todo)\n                }\n            }\n\n            yield acc\n        }\n    })\n\n    while (true) {\n        yield yield* connect(Filtered)\n    }\n}\n\nasync function* workInActionsMode({ Items }: Guts) {\n    const { TODO_MODE, TodoMode } = await import('./todo')\n\n    const create = (name: string) => {\n        exec(async function* () {\n            const { newTodo } = await import('./todo')\n            const id = (~~(Math.random() * 1e8)).toString(16)\n            const done = false\n            const Todo = newTodo({ id, name, done })\n            const todos = [Todo].concat(yield* Items)\n\n            Items.use(todos)\n        })\n    }\n\n    const removeCompleted = () => {\n        exec(async function* () {\n            yield* TODO_MODE(TodoMode.Service)\n\n            const todos = [] as Todo[]\n\n            for (const Todo of yield* Items) {\n                const { Done } = (yield* Todo) as TodoService\n\n                if (!(yield* Done)) {\n                    todos.push(Todo)\n                }\n            }\n\n            Items.use(todos)\n        })\n    }\n\n    while (true) {\n        yield { create, removeCompleted }\n    }\n}\n\nasync function* workInCountersMode({ Items }: Guts) {\n    const { TODO_MODE, TodoMode } = await import('./todo')\n    yield* TODO_MODE(TodoMode.Service)\n\n    while (true) {\n        let active = 0\n        let completed = 0\n\n        for (const Todo of yield* Items) {\n            const { Done } = (yield* Todo) as TodoService\n            ;(yield* Done) ? completed++ : active++\n        }\n\n        yield { completed, active } as TodosCounters\n    }\n}\n"],"sourceRoot":""}