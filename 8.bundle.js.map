{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.array.map.js","webpack:///./node_modules/core-js/modules/es.array.concat.js","webpack:///./src/todos/todos.ts"],"names":["$","$map","map","arrayMethodHasSpeciesSupport","arrayMethodUsesToLength","HAS_SPECIES_SUPPORT","USES_TO_LENGTH","target","proto","forced","callbackfn","this","arguments","length","undefined","fails","isArray","isObject","toObject","toLength","createProperty","arraySpeciesCreate","wellKnownSymbol","V8_VERSION","IS_CONCAT_SPREADABLE","IS_CONCAT_SPREADABLE_SUPPORT","array","concat","SPECIES_SUPPORT","isConcatSpreadable","O","spreadable","arg","i","k","len","E","A","n","TypeError","newTodos","storeKey","newTodo","create","name","exec","id","Math","random","toString","Todo","done","remove","Items","todos","use","removeId","MODE","Mode","Service","push","removeCompleted","Done","Autosync","fractal","Data","acc","localStorage","setItem","JSON","stringify","items","parse","getItem","fraction","data","Todos"],"mappings":"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","file":"8.bundle.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n// FF49- issue\nvar USES_TO_LENGTH = arrayMethodUsesToLength('map');\n\n// `Array.prototype.map` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT || !USES_TO_LENGTH }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;\n\n// `Array.prototype.concat` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, forced: FORCED }, {\n  concat: function concat(arg) { // eslint-disable-line no-unused-vars\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = toLength(E.length);\n        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","import { fractal, fraction, exec } from '@fract/core'\nimport { MODE, Mode } from './factors'\nimport { Todo, TodoData, TodoService } from './todo'\n\nexport async function newTodos(storeKey: string) {\n    const { newTodo } = await import('./todo')\n\n    const create = (name: string) => {\n        exec(async function* () {\n            const id = (~~(Math.random() * 1e8)).toString(16)\n            const done = false\n            const Todo = newTodo({ id, name, done }, remove)\n            const todos = [Todo].concat(yield* Items)\n\n            Items.use(todos)\n        })\n    }\n\n    const remove = (removeId: string) => {\n        exec(async function* () {\n            yield* MODE(Mode.Service)\n\n            const todos = [] as Todo[]\n\n            for (const Todo of yield* Items) {\n                const { id } = (yield* Todo) as TodoService\n\n                if (id !== removeId) {\n                    todos.push(Todo)\n                }\n            }\n\n            Items.use(todos)\n        })\n    }\n\n    const removeCompleted = () => {\n        exec(async function* () {\n            yield* MODE(Mode.Service)\n\n            const todos = [] as Todo[]\n\n            for (const Todo of yield* Items) {\n                const { Done } = (yield* Todo) as TodoService\n\n                if (!(yield* Done)) {\n                    todos.push(Todo)\n                }\n            }\n\n            Items.use(todos)\n        })\n    }\n\n    const Autosync = fractal(async function* _AutosyncWithLocalStore() {\n        yield* MODE(Mode.Data)\n\n        while (true) {\n            const acc = [] as TodoData[]\n\n            for (const Todo of yield* Items) {\n                acc.push((yield* Todo) as TodoData)\n            }\n\n            yield localStorage.setItem(storeKey, JSON.stringify(acc))\n        }\n    })\n\n    const items = JSON.parse(localStorage.getItem(storeKey) || '[]') as TodoData[]\n    const Items = fraction(items.map((data) => newTodo(data, remove)))\n\n    return {\n        Todos: fractal(async function* _Items() {\n            while (true) {\n                yield yield* Items\n            }\n        }),\n        Autosync,\n        create,\n        removeCompleted,\n    }\n}\n"],"sourceRoot":""}