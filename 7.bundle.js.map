{"version":3,"sources":["webpack:///./src/todos/factors.ts","webpack:///./src/todos/const.ts","webpack:///./src/todos/app.tsx"],"names":["Mode","MODE","factor","FILTER","CHANGE_FILTER","FilterMode","STORE_KEY","ENTER_KEY","ESCAPE_KEY","App","fractal","newTodos","newFiltered","newCounters","newFooter","Todos","Autosync","create","removeCompleted","Filtered","Counters","Footer","Filter","fraction","All","NewTodoName","mode","use","handleNewTodoNameInputChange","e","target","value","handleNewTodoNameInputKeyDown","keyCode","exec","newTodoName","list","Todo","push","a","Container","Wrapper","Header","Main","NewTodoNameInput","type","onChange","onKeyDown","placeholder","List","styled","section","header","main","ul","input"],"mappings":"0FAAA,4IAGYA,EAHZ,S,SAGYA,O,eAAAA,I,aAAAA,I,sBAAAA,M,KAML,IAAMC,EAAOC,cAEPC,EAASD,cAETE,EAAgBF,e,iCCb7B,wIAAO,IAKKG,EALCC,EAAY,aAEZC,EAAY,GACZC,EAAa,I,SAEdH,O,aAAAA,I,mBAAAA,I,0BAAAA,M,0mICEL,IAAMI,EAAMC,YAAO,4CAAc,qKACT,+BADS,uBAC5BC,EAD4B,EAC5BA,SAD4B,WAEN,gCAFM,uBAE5BC,EAF4B,EAE5BA,YAF4B,YAGN,gCAHM,wBAG5BC,EAH4B,EAG5BA,YAH4B,YAIR,gCAJQ,wBAI5BC,EAJ4B,EAI5BA,UAJ4B,YAMuBH,EAASL,MANhC,QAapC,OAboC,SAM5BS,EAN4B,EAM5BA,MAAOC,EANqB,EAMrBA,SAAUC,EANW,EAMXA,OAAQC,EANG,EAMHA,gBAC3BC,EAAWP,EAAYG,GACvBK,EAAWP,EAAYE,GACvBM,EAASP,EAAUM,EAAUF,GAC7BI,EAASC,YAASlB,IAAWmB,KAC7BC,EAAcF,YAAS,IAE7B,oBAAOP,GAAP,YAboC,QAcpC,2BAAOb,YAAOmB,IAAd,YAdoC,QAepC,2BAAOlB,aAAc,SAACsB,GAAD,OAAsBJ,EAAOK,IAAID,OAAtD,YAfoC,QAiB9BE,EAA+B,SAACC,GAClCJ,EAAYE,IAAIE,EAAEC,OAAOC,QAEvBC,EAAgC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClCC,YAAI,2BAAC,mGACmB,2BAAOT,GAAP,WADnB,QACKU,EADL,QAIOF,IAAY1B,KACZU,EAAOkB,GAEPF,IAAY1B,KAAa0B,IAAYzB,KACrCiB,EAAYE,IAAI,KARvB,6CArB2B,QAmCZ,2BAAOF,GAAP,YAnCY,QAuCb,OAJbU,EAnC0B,KAqC1BC,EAAO,GArCmB,OAuCb,oBAAOjB,GAAP,YAvCa,8FAwCjB,OADJkB,EAvCqB,aAwC5BD,EAAW,oBAAOC,GAAP,YAxCiB,uBAwCvBC,KAxCuB,mKAyDnB,OAzDmB,QAAAC,EAAA,MA4C3BC,EA5C2B,QAAAD,EAAA,MA6CvBE,EA7CuB,MA8CpB,kBAACC,EAAD,cA9CoB,MA+CpB,kBAACC,EAAD,KACI,kBAACC,EAAD,CACIC,KAAK,OACLd,MAAOI,EACPW,SAAUlB,EACVmB,UAAWf,EACXgB,YAAY,2BAEhB,kBAACC,EAAD,KAAOb,IAEV,oBAAOf,GAAP,aAzDmB,QA2ChC,OA3CgC,yFA2ChC,iDA3CgC,yFAAd,sDAgEpBmB,EAAYU,IAAOC,QAAV,KAQTV,EAAUS,IAAOC,QAAV,KAKPT,EAASQ,IAAOE,OAAV,KAONT,EAAOO,IAAOG,KAAV,KAKJJ,EAAOC,IAAOI,GAAV,KAEJV,EAAmBM,IAAOK,MAAV","file":"7.bundle.js","sourcesContent":["import { factor, Fractal } from '@fract/core'\nimport { FilterMode } from './const'\n\nexport enum Mode {\n    Data,\n    Jsx,\n    Service,\n}\n\nexport const MODE = factor<Mode>()\n\nexport const FILTER = factor<Fractal<FilterMode>>()\n\nexport const CHANGE_FILTER = factor<(mode: FilterMode) => any>()\n","export const STORE_KEY = 'TODO_STORE'\n\nexport const ENTER_KEY = 13\nexport const ESCAPE_KEY = 27\n\nexport enum FilterMode {\n    All,\n    Active,\n    Completed,\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { fractal, fraction, exec } from '@fract/core'\nimport { STORE_KEY, ENTER_KEY, ESCAPE_KEY, FilterMode } from './const'\nimport { FILTER, CHANGE_FILTER } from './factors'\nimport { TodoJsx } from './todo'\n\nexport const App = fractal<JSX.Element>(async function* _App() {\n    const { newTodos } = await import('./todos')\n    const { newFiltered } = await import('./filtered')\n    const { newCounters } = await import('./counters')\n    const { newFooter } = await import('./footer')\n\n    const { Todos, Autosync, create, removeCompleted } = await newTodos(STORE_KEY)\n    const Filtered = newFiltered(Todos)\n    const Counters = newCounters(Todos)\n    const Footer = newFooter(Counters, removeCompleted)\n    const Filter = fraction(FilterMode.All)\n    const NewTodoName = fraction('')\n\n    yield* Autosync\n    yield* FILTER(Filter)\n    yield* CHANGE_FILTER((mode: FilterMode) => Filter.use(mode))\n\n    const handleNewTodoNameInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        NewTodoName.use(e.target.value)\n    }\n    const handleNewTodoNameInputKeyDown = ({ keyCode }: React.KeyboardEvent) =>\n        exec(async function* () {\n            const newTodoName = yield* NewTodoName\n\n            if (newTodoName) {\n                if (keyCode === ENTER_KEY) {\n                    create(newTodoName)\n                }\n                if (keyCode === ENTER_KEY || keyCode === ESCAPE_KEY) {\n                    NewTodoName.use('')\n                }\n            }\n        })\n\n    while (true) {\n        const newTodoName = yield* NewTodoName\n\n        const list = [] as TodoJsx[]\n\n        for (const Todo of yield* Filtered) {\n            list.push((yield* Todo) as TodoJsx)\n        }\n\n        yield (\n            <Container>\n                <Wrapper>\n                    <Header>todos</Header>\n                    <Main>\n                        <NewTodoNameInput\n                            type=\"text\"\n                            value={newTodoName}\n                            onChange={handleNewTodoNameInputChange}\n                            onKeyDown={handleNewTodoNameInputKeyDown}\n                            placeholder=\"What needs to be done?\"\n                        />\n                        <List>{list}</List>\n                    </Main>\n                    {yield* Footer}\n                </Wrapper>\n            </Container>\n        )\n    }\n})\n\nconst Container = styled.section`\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    padding: 100px 20px;\n    font-weight: 100;\n`\n\nconst Wrapper = styled.section`\n    width: 100%;\n    max-width: 500px;\n`\n\nconst Header = styled.header`\n    font-size: 100px;\n    text-align: center;\n    color: #29b6f6;\n    user-select: none;\n`\n\nconst Main = styled.main`\n    background-color: white;\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 25px 50px 0 rgba(0, 0, 0, 0.1);\n`\n\nconst List = styled.ul``\n\nconst NewTodoNameInput = styled.input`\n    width: 100%;\n    height: 70px;\n    font-size: 24px;\n    padding: 20px;\n    margin: 0;\n    border: none;\n    outline: none;\n    font-family: inherit;\n    font-weight: inherit;\n    border-bottom: 1px solid #e5e5e5;\n    -webkit-font-smoothing: antialiased;\n    ::placeholder {\n        font-style: italic;\n        color: #adadad;\n    }\n`\n"],"sourceRoot":""}